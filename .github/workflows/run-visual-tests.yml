name: Run Visual Tests
on:
  workflow_run:
    workflows: ["Trigger Unsafe Workflows"]
    types: [completed]

permissions: {}

jobs:
  run-visual-tests:
    name: Run Visual Tests
    runs-on: ubuntu-20.04
    permissions:
      contents: read
    env:
      elm_version: 0.19.1
      PORT: 3000
    steps:
      - name: Checkout unsafe code from forked repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      ### We are now working with unsafe code from a forked repository
      ### So don't allow any dangerous permissions on the github token
      ### or expose any of our secrets without great thought behind it

      - name: Install Elm
        uses: jorelali/setup-elm@v3
        with:
          elm-version: ${{ env.elm_version }}

      - name: Install Percy and Serve
        run: yarn add -D @percy/cli serve

      - name: Setup Percy Configuration
        run: 'echo ''{ "version": 2, "snapshot": { "widths": [1280] }}'' > percy-config.json'

      - name: Preserve Drawing Buffer for WebGL so snapshots work
        run: |
          sed -i 's/\bCube.view\b/Cube.Advanced.debugViewAllowingVisualTesting/g' ./examples/src/*.elm &&
          sed -i '/^module .* exposing.*/a import Cube.Advanced' ./examples/src/*.elm &&
          sed -i 's/-- ADD-STYLE-NODE-HERE-FOR-VISUAL-TESTING/node "style" [] [text "img {display: block;}"],/g' ./examples/src/CubeViews.elm

      - name: Create snapshots of examples
        shell: bash
        run: |
          mkdir percy-snapshots &&
          cd examples/src &&
          for filename in *.elm; do
              elm make "$filename" &&
              mv index.html ../../percy-snapshots/"$filename".html
              echo "- name: $filename" >> snapshots.yml
              echo "  url: http://localhost:$PORT/$filename" >> snapshots.yml
              # This is the important part, otherwise we could just use the directory version
              # of the snapshot command, but we need to wait in order to make the new cli work
              echo "  waitForTimeout: 3000" >> snapshots.yml
          done
          mv snapshots.yml ../../

      ### This is the only place we run the untrusted code
      ### We have made sure that the github token has minimum
      ### permissions and the only secret we are passing is the
      ### PERCY_TOKEN. We are also not running any scripts checked in to source
      ### but inlining it here and above which should make it impossible to abuse in a PR
      - name: Upload snapshots to Percy
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_BRANCH: ${{ github.event.workflow_run.head_branch }}
          PERCY_PULL_REQUEST: ${{ github.event.workflow_run.pull_requests[0].number }}
          PERCY_COMMIT: ${{ github.event.workflow_run.head_sha }}
        uses: BerniWittmann/background-server-action@latest
        with:
          command: >
            ./node_modules/.bin/percy snapshot --config percy-config.json snapshots.yml
          start: yarn serve -l $PORT snapshots.yml
