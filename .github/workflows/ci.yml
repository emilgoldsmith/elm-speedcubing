name: CI
on:
  push:
    branches: main
  pull_request: {}

jobs:
  lint-and-unit-test:
    name: Lint And Unit Test
    runs-on: ubuntu-20.04
    env:
      elm_version: 0.19.0
      elm_test_version: 0.19.0
      elm_format_version: 0.8.4
      elm_verify_examples_version: 5.0.0
      elm_analyse_version: 0.16.5
      elm_doc_preview_version: 5.0.5
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 15

      - name: Cache npm globals
        uses: actions/cache@v2
        env:
          cache-name: npm-globals-v1-${{ env.elm_test_version }}-${{ env.elm_format_version }}-${{ env.elm_verify_examples_version }}-${{ env.elm_analyse_version }}
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}
          # Note we purposefully don't specify fallback restore keys.
          # Explanation: https://glebbahmutov.com/blog/do-not-let-cypress-cache-snowball/

      - name: Install Elm
        uses: jorelali/setup-elm@v3
        with:
          elm-version: ${{ env.elm_version }}

      - name: Install Elm globals through npm
        shell: bash
        run: |
          npm install -g \
            elm-test@$elm_test_version \
            elm-format@$elm_format_version \
            elm-verify-examples@$elm_verify_examples_version \
            elm-analyse@$elm_analyse_version \
            elm-doc-preview@$elm_doc_preview_version

          echo 'PATH="$PATH:$(npm bin --global)"' >> ~/.bashrc

      - name: Compiles everything
        run: ./scripts/checks/compiles-everything.sh

      - name: Assert elm-verify-examples is up to date
        run: ./scripts/checks/elm-verify-examples.sh && ./scripts/helpers/check-for-uncommitted-changes.sh

      - name: Run elm-format
        run: ./scripts/checks/elm-format.sh

      - name: Run elm-analyse
        run: ./scripts/checks/elm-analyse.sh

      - name: Run unit tests
        run: ./scripts/checks/elm-test.sh

      - name: Check that docs compile
        run: ./scripts/checks/elm-docs-compile.sh

      - name: Handle Yarn caching
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache-v1
        with:
          path: |
            ~/.cache/yarn
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('end-to-end-tests/**/yarn.lock')}}
          # Note we purposefully don't specify fallback restore keys.
          # Explanation: https://glebbahmutov.com/blog/do-not-let-cypress-cache-snowball/

      - name: Install Cypress Dependencies
        working-directory: end-to-end-tests
        run: yarn

      - name: Run Prettier on Cypress Code
        run: ./scripts/checks/prettier.sh

      - name: Run Eslint on Cypress Code
        run: ./scripts/checks/eslint.sh

      - name: Run Typescript Type Checking on Cypress Code
        run: ./scripts/checks/typescript.sh

  publish-new-version:
    name: Publish New Version
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [lint-and-unit-test] # make sure all your other jobs succeed before trying to publish
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Elm
        uses: jorelali/setup-elm@v3
        with:
          elm-version: 0.19.0

      - uses: dillonkearns/elm-publish-action@v1
        id: publish
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-elm: /usr/local/bin/elm

      # Retry as it seems like specifically the tag isn't picked up quickly enough
      # so we wait a bit and try again
      - name: Wait before retrying
        if: ${{ steps.publish.outcome == 'failure' }}
        run: sleep 30

      - uses: dillonkearns/elm-publish-action@v1
        if: ${{ steps.publish.outcome == 'failure' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-elm: /usr/local/bin/elm
