module VerifyExamples.PLL.GetAllEquivalentAUFs0 exposing (..)

-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples).
-- Please don't modify this file by hand!

import Test
import Expect

import PLL exposing (..)
import List.Nonempty
import Expect.Extra exposing (equalNonEmptyListMembers)
import Expect
import AUF







spec0 : Test.Test
spec0 =
    Test.test "#getAllEquivalentAUFs: \n\n    getAllEquivalentAUFs ( AUF.None, PLL.H, AUF.None )\n        |> equalNonEmptyListMembers\n            (List.Nonempty.Nonempty\n                ( AUF.None, AUF.None )\n                [ ( AUF.Clockwise, AUF.CounterClockwise )\n                , ( AUF.Halfway, AUF.Halfway )\n                , ( AUF.CounterClockwise, AUF.Clockwise )\n                ]\n            )\n    --> Expect.pass" <|
        \() ->
            Expect.equal
                (
                getAllEquivalentAUFs ( AUF.None, PLL.H, AUF.None )
                    |> equalNonEmptyListMembers
                        (List.Nonempty.Nonempty
                            ( AUF.None, AUF.None )
                            [ ( AUF.Clockwise, AUF.CounterClockwise )
                            , ( AUF.Halfway, AUF.Halfway )
                            , ( AUF.CounterClockwise, AUF.Clockwise )
                            ]
                        )
                )
                (
                Expect.pass
                )